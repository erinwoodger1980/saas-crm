name: API CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: api-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: saascrm
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=30

    defaults:
      run:
        working-directory: api

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/saascrm?schema=public
      APP_JWT_SECRET: test_secret_for_ci
      OPENAI_API_KEY: dummy_for_ci
      PORT: 4000
      CI: "true"

    steps:
      - uses: actions/checkout@v4

      - name: Node setup
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            api/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Prisma generate
        run: npm run prisma:generate

      - name: Apply DB migrations (deploy)
        run: npm run prisma:deploy

      - name: Type-check
        run: npx tsc -p tsconfig.json --pretty false --noEmit

      - name: Build API
        run: npm run build

      - name: Start API (background)
        run: node dist/src/server.js &
      
      - name: Wait for API
        run: |
          for i in {1..40}; do
            if curl -sf http://localhost:4000/healthz >/dev/null; then
              echo "API is up"; exit 0;
            fi
            echo "Waiting for API..."; sleep 2;
          done
          echo "API failed to start"; exit 1

      - name: Healthcheck
        run: curl -sSf http://localhost:4000/healthz | tee /dev/stderr