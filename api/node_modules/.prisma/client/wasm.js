
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TenantScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  email: 'email',
  name: 'name',
  role: 'role',
  passwordHash: 'passwordHash'
};

exports.Prisma.LeadScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  createdById: 'createdById',
  contactName: 'contactName',
  email: 'email',
  status: 'status',
  capturedAt: 'capturedAt',
  nextActionAt: 'nextActionAt',
  nextAction: 'nextAction',
  briefJson: 'briefJson',
  custom: 'custom'
};

exports.Prisma.OpportunityScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  leadId: 'leadId',
  title: 'title',
  valueGBP: 'valueGBP',
  stage: 'stage',
  wonAt: 'wonAt',
  lostAt: 'lostAt',
  createdAt: 'createdAt'
};

exports.Prisma.EmailIngestScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  provider: 'provider',
  messageId: 'messageId',
  fromEmail: 'fromEmail',
  subject: 'subject',
  snippet: 'snippet',
  processedAt: 'processedAt',
  leadId: 'leadId',
  createdAt: 'createdAt'
};

exports.Prisma.LeadFieldDefScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  key: 'key',
  label: 'label',
  type: 'type',
  required: 'required',
  config: 'config',
  sortOrder: 'sortOrder'
};

exports.Prisma.GmailTenantConnectionScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  connectedById: 'connectedById',
  gmailAddress: 'gmailAddress',
  refreshToken: 'refreshToken',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LeadExampleScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  provider: 'provider',
  messageId: 'messageId',
  subject: 'subject',
  body: 'body',
  extracted: 'extracted',
  label: 'label',
  createdAt: 'createdAt'
};

exports.Prisma.LeadTrainingExampleScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  provider: 'provider',
  messageId: 'messageId',
  label: 'label',
  extracted: 'extracted',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.LeadStatus = exports.$Enums.LeadStatus = {
  NEW: 'NEW',
  CONTACTED: 'CONTACTED',
  QUALIFIED: 'QUALIFIED',
  DISQUALIFIED: 'DISQUALIFIED'
};

exports.OppStage = exports.$Enums.OppStage = {
  QUALIFY: 'QUALIFY',
  PROPOSE: 'PROPOSE',
  NEGOTIATE: 'NEGOTIATE',
  WON: 'WON',
  LOST: 'LOST'
};

exports.LeadLabel = exports.$Enums.LeadLabel = {
  LEAD: 'LEAD',
  NOT_LEAD: 'NOT_LEAD',
  UNSURE: 'UNSURE'
};

exports.Prisma.ModelName = {
  Tenant: 'Tenant',
  User: 'User',
  Lead: 'Lead',
  Opportunity: 'Opportunity',
  EmailIngest: 'EmailIngest',
  LeadFieldDef: 'LeadFieldDef',
  GmailTenantConnection: 'GmailTenantConnection',
  LeadExample: 'LeadExample',
  LeadTrainingExample: 'LeadTrainingExample'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/Erin/saas-crm/api/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/Erin/saas-crm/api/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Tenant {\n  id                    String                 @id @default(cuid())\n  name                  String\n  createdAt             DateTime               @default(now())\n  users                 User[]\n  leads                 Lead[]\n  opportunities         Opportunity[]\n  leadFieldDefs         LeadFieldDef[]\n  GmailTenantConnection GmailTenantConnection?\n}\n\nmodel User {\n  id                    String                  @id @default(cuid())\n  tenantId              String\n  tenant                Tenant                  @relation(fields: [tenantId], references: [id])\n  email                 String                  @unique\n  name                  String?\n  role                  String                  @default(\"user\")\n  passwordHash          String\n  GmailTenantConnection GmailTenantConnection[] // reverse relation safety\n}\n\nenum LeadStatus {\n  NEW\n  CONTACTED\n  QUALIFIED\n  DISQUALIFIED\n}\n\nmodel Lead {\n  id           String       @id @default(cuid())\n  tenantId     String\n  tenant       Tenant       @relation(fields: [tenantId], references: [id])\n  createdById  String\n  contactName  String\n  email        String?\n  status       LeadStatus   @default(NEW)\n  capturedAt   DateTime     @default(now())\n  nextActionAt DateTime?\n  nextAction   String?\n  briefJson    Json?\n  custom       Json?\n  opportunity  Opportunity?\n}\n\nenum OppStage {\n  QUALIFY\n  PROPOSE\n  NEGOTIATE\n  WON\n  LOST\n}\n\nmodel Opportunity {\n  id        String    @id @default(cuid())\n  tenantId  String\n  tenant    Tenant    @relation(fields: [tenantId], references: [id])\n  leadId    String    @unique\n  lead      Lead      @relation(fields: [leadId], references: [id])\n  title     String\n  valueGBP  Decimal?\n  stage     OppStage  @default(QUALIFY)\n  wonAt     DateTime?\n  lostAt    DateTime?\n  createdAt DateTime  @default(now())\n\n  @@index([tenantId, stage])\n}\n\nmodel EmailIngest {\n  id          String    @id @default(cuid())\n  tenantId    String\n  provider    String\n  messageId   String\n  fromEmail   String?\n  subject     String?\n  snippet     String?\n  processedAt DateTime?\n  leadId      String?\n  createdAt   DateTime  @default(now())\n\n  @@unique([tenantId, provider, messageId])\n}\n\nmodel LeadFieldDef {\n  id       String @id @default(cuid())\n  tenantId String\n  tenant   Tenant @relation(fields: [tenantId], references: [id])\n\n  key       String\n  label     String\n  type      String  @default(\"text\")\n  required  Boolean @default(false)\n  config    Json?\n  sortOrder Int     @default(0)\n\n  @@unique([tenantId, key])\n  @@index([tenantId, sortOrder])\n}\n\nmodel GmailTenantConnection {\n  id       String @id @default(cuid())\n  tenantId String\n  tenant   Tenant @relation(fields: [tenantId], references: [id])\n\n  connectedById String?\n  connectedBy   User?   @relation(fields: [connectedById], references: [id])\n\n  gmailAddress String?\n  refreshToken String\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  @@unique([tenantId])\n  @@index([tenantId])\n}\n\nenum LeadLabel {\n  LEAD\n  NOT_LEAD\n  UNSURE\n}\n\nmodel LeadExample {\n  id        String    @id @default(cuid())\n  tenantId  String\n  provider  String // \"gmail\" | \"outlook\" | \"local\"\n  messageId String\n  subject   String?\n  body      String?\n  extracted Json? // raw extraction from OpenAI\n  label     LeadLabel @default(UNSURE)\n  createdAt DateTime  @default(now())\n\n  @@index([tenantId, provider, messageId])\n}\n\nmodel LeadTrainingExample {\n  id        String   @id @default(cuid())\n  tenantId  String\n  provider  String // e.g. \"gmail\", \"outlook\", \"local\"\n  messageId String // email/message id from provider\n  label     String // \"lead\" | \"not_lead\"\n  extracted Json? // what we parsed (subject, body, fields)\n  createdAt DateTime @default(now())\n\n  @@index([tenantId, provider, messageId])\n}\n",
  "inlineSchemaHash": "8e48cc7a1343be405f86d44eeadb376b70b5b8490f686f19d2bee5019931ec62",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Tenant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TenantToUser\"},{\"name\":\"leads\",\"kind\":\"object\",\"type\":\"Lead\",\"relationName\":\"LeadToTenant\"},{\"name\":\"opportunities\",\"kind\":\"object\",\"type\":\"Opportunity\",\"relationName\":\"OpportunityToTenant\"},{\"name\":\"leadFieldDefs\",\"kind\":\"object\",\"type\":\"LeadFieldDef\",\"relationName\":\"LeadFieldDefToTenant\"},{\"name\":\"GmailTenantConnection\",\"kind\":\"object\",\"type\":\"GmailTenantConnection\",\"relationName\":\"GmailTenantConnectionToTenant\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToUser\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"GmailTenantConnection\",\"kind\":\"object\",\"type\":\"GmailTenantConnection\",\"relationName\":\"GmailTenantConnectionToUser\"}],\"dbName\":null},\"Lead\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"LeadToTenant\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"LeadStatus\"},{\"name\":\"capturedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextActionAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextAction\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"briefJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"custom\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"opportunity\",\"kind\":\"object\",\"type\":\"Opportunity\",\"relationName\":\"LeadToOpportunity\"}],\"dbName\":null},\"Opportunity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"OpportunityToTenant\"},{\"name\":\"leadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lead\",\"kind\":\"object\",\"type\":\"Lead\",\"relationName\":\"LeadToOpportunity\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"valueGBP\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"stage\",\"kind\":\"enum\",\"type\":\"OppStage\"},{\"name\":\"wonAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lostAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EmailIngest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"snippet\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"leadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"LeadFieldDef\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"LeadFieldDefToTenant\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"required\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"GmailTenantConnection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"GmailTenantConnectionToTenant\"},{\"name\":\"connectedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"connectedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GmailTenantConnectionToUser\"},{\"name\":\"gmailAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"LeadExample\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"extracted\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"label\",\"kind\":\"enum\",\"type\":\"LeadLabel\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"LeadTrainingExample\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"extracted\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

